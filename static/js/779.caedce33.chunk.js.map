{"version":3,"file":"static/js/779.caedce33.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAAG,oGACCD,EAAAA,GAAAA,IAAU,oBAAqB,CACpDE,OAAQ,CACNC,QAAS,sCAHS,cAChBC,EADgB,yBAOfA,EAASC,KAAKC,SAPC,2CAAH,qDAUVC,EAAc,mCAAG,WAAOC,GAAP,uFACHR,EAAAA,GAAAA,IAAA,iBAAoBQ,GAAM,CAC/CN,OAAQ,CACNC,QAAS,sCAHa,cACpBC,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAUdI,EAAmB,mCAAG,WAAOD,GAAP,uFACRR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAOxBA,EAASC,KAAKK,MAPU,2CAAH,sDAUnBC,EAAiB,mCAAG,WAAOH,GAAP,uFACNR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,sDAUjBM,EAAiB,mCAAG,WAAOC,GAAP,uFACNb,EAAAA,GAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAAS,mCACTU,MAAOA,KAJkB,cACvBT,EADuB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,qD,oKCzCjBQ,EAAQC,EAAAA,GAAAA,GAAH,8EAILC,EAAaD,EAAAA,GAAAA,GAAH,oGAMVE,EAAOF,EAAAA,GAAAA,EAAH,kHAOJG,EAAOH,EAAAA,GAAAA,GAAH,gCACX,IAKOI,EAAWJ,EAAAA,GAAAA,GAAH,gDAIRK,EAAUL,EAAAA,GAAAA,IAAH,4C,SCkBpB,EApCgB,WAChB,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeE,OAbAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAY,mCAAG,8GAEKhB,EAAAA,EAAAA,IAAkBU,GAFvB,OAEVO,EAFU,OAGhBH,EAAeG,GAHC,uGAAH,qDAQjBD,GACF,GAAC,CAACN,IAGEG,EAAYK,OAAS,GAEvB,SAACT,EAAD,WACE,SAACF,EAAD,UACKM,EAAYM,KAAI,SAAAC,GAAE,OACnB,UAACZ,EAAD,YACE,SAACL,EAAD,UAAQiB,EAAGC,UACX,SAACf,EAAD,UAAOc,EAAGE,YAFGF,EAAGvB,GADC,SAWpB,SAACQ,EAAD,kCAER,C","sources":["api/api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = async () => {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n    \n    return response.data.results;\n};\n\nexport const fetchFilmsById = async (id) => {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data;\n};\n\nexport const fetchFilmsByCredits = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async (query) => {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n        query: query,\n      }\n    })\n  \n  return response.data.results;\n};\n\n\n\n\n  \n\n\n","import styled from \"styled-components\";\n\n\nexport const Title = styled.h3`\n    font-size: 20px;\n    text-transform: uppercase;\n`\nexport const ErrorTitle = styled.h3`\n    margin-top:40px;\n    font-size: 40px;\n    text-transform: uppercase;\n`\n\nexport const Text = styled.p`\n  padding: 20px 0px;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.3;\n`\n\nexport const List = styled.ul`\n    ${'' /* display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n    gap: 20px 10px; */}\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-top:25px;\n`","import { useParams, } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchFilmsReviews } from \"api/api\";\nimport {\n  Title,\n  Text,\n  List,\n  ListItem,\n  Wrapper,\n  ErrorTitle\n} from \"./Reviews.styled\";\n\nconst Reviews = () => { \nconst { movieId } = useParams();\nconst [reviewsData, setReviewsData] = useState([]); \n\n  useEffect(() => {\n   const getFetchCast = async () => {\n      try {\n        const result = await fetchFilmsReviews(movieId);\n        setReviewsData(result)\n      } catch (err) {\n        \n      }\n    }\n    getFetchCast();\n },[movieId])\n\n\n  if (reviewsData.length > 0) {\n    return (\n    <Wrapper>\n      <List>\n          {reviewsData.map(el => (\n          <ListItem key={el.id}>\n            <Title>{el.author}</Title>\n            <Text>{el.content}</Text>\n          </ListItem>\n        ))}\n      </List>\n    </Wrapper>\n  )\n  }\n  \n  return <ErrorTitle>There is no reviews.</ErrorTitle> \n  \n}\n\nexport default Reviews"],"names":["axios","fetchFilms","params","api_key","response","data","results","fetchFilmsById","id","fetchFilmsByCredits","cast","fetchFilmsReviews","fetchFilmsByQuery","query","Title","styled","ErrorTitle","Text","List","ListItem","Wrapper","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getFetchCast","result","length","map","el","author","content"],"sourceRoot":""}