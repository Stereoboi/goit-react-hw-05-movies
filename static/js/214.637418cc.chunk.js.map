{"version":3,"file":"static/js/214.637418cc.chunk.js","mappings":"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","sources":["api/api.js","components/SearchBar/Search.styled.js","components/SearchBar/Search.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = async () => {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n    \n    return response.data.results;\n};\n\nexport const fetchFilmsById = async (id) => {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data;\n};\n\nexport const fetchFilmsByCredits = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async (query) => {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n        query: query,\n      }\n    })\n  \n  return response.data.results;\n};\n\n\n\n\n  \n\n\n","import styled from \"styled-components\";\n\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding-bottom: 10px;\n  border: none;\n  border-bottom: 1px solid grey;\n  outline: none;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  color: orangered;\n  background-color: transparent;\n  transition: border-color 250ms ease-in-out;\n  &::placeholder {\n    font-size: 16px;\n    font-weight: 500;\n    color: grey;\n    opacity: 0;\n    transition: opacity 250ms ease-in-out;\n  }\n  &:focus {\n    border-color: orangered;\n    &::placeholder {\n      opacity: 1;\n      transition-delay: 250ms;\n    }\n  }\n`;\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SubmitBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: transparent;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    color:orangered;\n  }\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n  &::placeholder {\n  font-family: inherit;\n  font-size: 100%;\n`;","import PropTypes from 'prop-types';\nimport {TfiSearch} from \"react-icons/tfi\";\nimport {\n  Form,\n  Input,\n  SubmitBtn,\n  ButtonLabel\n\n} from './Search.styled';\n\nexport const Search = ({onSubmit}) => {\n  return (\n    <Form onSubmit={e => onSubmit(e)} >\n        <Input \n          type=\"text\"\n          name=\"query\"\n          placeholder='Type name of movie'  \n        />\n      <SubmitBtn>\n        <TfiSearch/>\n          <ButtonLabel>\n            Search\n          </ButtonLabel>\n        </SubmitBtn>\n      </Form>\n  )\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\n","import styled from \"styled-components\";\n\nimport { NavLink } from \"react-router-dom\";\n\nexport const LinkItem = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  padding: 8px 0;\n  font-size: 20px;\n  display: inline-block;\n`;\nexport const ListItem = styled.li`\n  \n`;\n\nexport const Title = styled.h1`\n  padding: 8px 0;\n  font-size: 40px;\n  display: inline-block;\n  margin-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const Wrapper = styled.main`\n  \n`;","import { useState, useEffect } from 'react';\nimport { fetchFilmsByQuery } from 'api/api';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Search } from 'components/SearchBar/Search';\nimport {\n  LinkItem,\n  Text,\n  ListItem,\n  Title,\n  List,\n  Wrapper\n} from './Movies.styled';\n\nconst Movies = () => {\n\n  \n  const [searchResults, setSearchResults] = useState([]);\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const search = searchParams.get(\"name\") ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    setSearchParams({ name: e.target.elements.query.value })\n    \n  };\n\n  useEffect(() => {\n   if (!search) return\n   \n   const getFetch = async () => {\n      try {\n        const result = await fetchFilmsByQuery(search);\n        setSearchResults(result)\n      } catch (err) {\n        // console.log('error');\n      }\n    }\n    getFetch();\n  }, [search, searchParams])\n\n  return (\n    <Wrapper>\n      <Title>Movies</Title>\n      <Search\n        onSubmit={handleSubmit}\n        value={search}\n        />\n      {searchResults && (\n        <List>\n        {searchResults.map(el => (\n          <ListItem key={el.id}>\n            <LinkItem to={`${el.id}`} state={{ from: location }}>\n                <Text>{el.name || el.title}</Text>\n            </LinkItem>\n          </ListItem>\n        ))}\n      </List>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Movies"],"names":["axios","fetchFilms","params","api_key","response","data","results","fetchFilmsById","id","fetchFilmsByCredits","cast","fetchFilmsReviews","fetchFilmsByQuery","query","Form","styled","Input","ButtonLabel","SubmitBtn","Search","onSubmit","e","type","name","placeholder","LinkItem","NavLink","Text","ListItem","Title","List","Wrapper","useState","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","location","useLocation","search","get","useEffect","getFetch","result","preventDefault","target","elements","value","map","el","to","state","from","title"],"sourceRoot":""}