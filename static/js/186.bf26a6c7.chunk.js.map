{"version":3,"file":"static/js/186.bf26a6c7.chunk.js","mappings":"yNAwCA,UApCgB,WAChB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBE,IAfAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAkBP,GAFvB,OAEVQ,EAFU,OAGhBC,QAAQC,IAAIF,GACZJ,EAAeI,GAJC,gDAOhBC,QAAQC,IAAI,SAPI,yDAAH,qDAUjBJ,GACF,GAAC,CAACN,IAGEG,EACF,OACA,iCACE,qCACA,wBACKA,EAAYQ,KAAI,SAAAC,GAAE,OACnB,2BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGE,YAFAF,EAAGG,GADO,QAU5B,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams, } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchFilmsReviews } from \"api/api\";\n\nconst Reviews = () => { \nconst { movieId } = useParams();\nconst [reviewsData, setReviewsData] = useState([]); \n\n  useEffect(() => {\n   const getFetchCast = async () => {\n      try {\n        const result = await fetchFilmsReviews(movieId);\n        console.log(result);\n        setReviewsData(result)\n        \n      } catch (err) {\n        console.log('error');\n      }\n    }\n    getFetchCast();\n },[movieId])\n\n\n  if (reviewsData) {\n    return (\n    <>\n      <h3>Reviews</h3>\n      <ul>\n          {reviewsData.map(el => (\n          <li key={el.id}>\n            <h2>{el.author}</h2>\n            <p>{el.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n  }\n}\n\nexport default Reviews"],"names":["movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getFetchCast","fetchFilmsReviews","result","console","log","map","el","author","content","id"],"sourceRoot":""}