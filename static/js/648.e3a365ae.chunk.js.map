{"version":3,"file":"static/js/648.e3a365ae.chunk.js","mappings":"wQAEaA,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACE,kBAAMA,SAAU,SAAAC,GAAC,OAAID,EAASC,EAAb,EAAjB,WACI,kBACEC,KAAK,OACLC,KAAK,WAEP,yCAGP,EC4DD,EAnEe,WAAO,IAAD,EAGnB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAM,UAAGJ,EAAaK,IAAI,eAApB,QAA+B,GA6B3C,OApBAC,EAAAA,EAAAA,YAAU,WACT,GAAKF,EAAL,CAEA,IAAMG,EAAQ,mCAAG,8GAESC,EAAAA,EAAAA,IAAkBJ,GAF3B,OAENK,EAFM,OAGZC,QAAQC,IAAIF,GACZX,EAAiBW,GAJL,yGAAH,qDASbF,GAXkB,CAYnB,GAAE,CAACH,EAAQJ,KAQV,iCACE,oCACA,SAACT,EAAD,CACEC,SA/Be,SAAAC,GACnBA,EAAEmB,iBAEFX,EAAgB,CAAEN,KAAMF,EAAEoB,OAAOC,SAASC,MAAMC,OAEjD,EA4BKA,MAAOZ,IAURP,IACC,wBACCA,EAAcoB,KAAI,SAAAC,GAAE,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAGE,IAAMC,MAAO,CAAEC,KAAMpB,GAArC,UACI,uBAAIgB,EAAGvB,MAAQuB,EAAGK,WAFfL,EAAGE,GADO,QAW5B,C","sources":["components/SearchBar/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const Search = ({onSubmit}) => {\n  return (\n    <form onSubmit={e => onSubmit(e)} >\n        <input \n          type=\"text\"\n          name=\"query\"  \n        />\n        <button>search</button>\n      </form>\n  )\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func,\n}","import { useState, useEffect } from 'react';\nimport { fetchFilmsByQuery } from 'api/api';\nimport {  Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { Search } from 'components/SearchBar/Search';\n\nconst Movies = () => {\n\n  \n  const [searchResults, setSearchResults] = useState([]);\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const search = searchParams.get(\"name\") ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    setSearchParams({ name: e.target.elements.query.value })\n    \n  };\n\n  useEffect(() => {\n   if (!search) return\n   \n   const getFetch = async () => {\n      try {\n        const result = await fetchFilmsByQuery(search);\n        console.log(result);\n        setSearchResults(result)\n      } catch (err) {\n        // console.log('error');\n      }\n    }\n    getFetch();\n  }, [search, searchParams])\n\n  // const changeURLParameter = value => {\n  //   setSearchParams (value !== '' ? {name: value}: {})\n  // }\n  \n\n  return (\n    <>\n      <h1>Movies</h1>\n      <Search\n        onSubmit={handleSubmit}\n        // onChange={changeURLParameter} \n        value={search}\n        />\n      {/* <form onSubmit={handleSubmit} >\n        <input type=\"text\"\n          name=\"query\"\n          onChange={e => changeURLParameter(e.target.value)}\n          value={search}\n        />\n        <button>search</button>\n      </form> */}\n      {searchResults && (\n        <ul>\n        {searchResults.map(el => (\n          <li key={el.id}>\n            <Link to={`${el.id}`} state={{ from: location }}>\n                <p>{el.name || el.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies"],"names":["Search","onSubmit","e","type","name","useState","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","location","useLocation","search","get","useEffect","getFetch","fetchFilmsByQuery","result","console","log","preventDefault","target","elements","query","value","map","el","to","id","state","from","title"],"sourceRoot":""}